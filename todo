#!/usr/bin/perl -w
use strict;
use Env qw( $HOME );
use Getopt::Long;
use Pod::Usage;
use File::Find;

my ($list, $new, $edit, $body);
my $priority = 3;
GetOptions(
    'help'       => sub { pod2usage( -verbose => 1 ) },
    'man'        => sub { pod2usage( -verbose => 3 ) },
    'ls'         => \$list,
    'new=s'      => \$new,
    'body=s'     => \$body,
    'edit=s'     => \$edit,
    'priority=i' => \$priority,
);

if(!$list and !$edit and @ARGV) {
    $new = "@ARGV";
}
elsif(!$edit and !$new and !@ARGV) {
    $list = 1;
}

my $dir = "$HOME/.todo";
mkdir $dir unless -d $dir;

find( \&list, $dir ) if ($list);
new($new)   if ($new);
edit($edit) if ($edit);
exit 0;

sub list
{
    my $file = $_;
    return unless -f $file;
    print "$file : ";
    print get_subject($file);
}

sub get_subject
{
    my $file = shift;
    open my $in, '<', $file or die "Couldn't open $file $!\n";
    my $subject = '';
    while(<$in>) {
        if(/^## Subject: ##/ ... /^##/) {
            $subject .= $_ unless /^##/;
        }
    }
    close $in;
    return $subject;
}

sub new
{
    my $subject = shift;
    my $name = generate_name();
    open my $out, '>', $name or die "Couldn't open $name $!\n";
    print $out "## Priority: $priority ##\n";
    print $out "## Subject: ##\n";
    print $out "$subject\n";
    print $out "## Body: ##\n";
    print $out "$body\n" if $body;
    close $out;
}

sub generate_name
{
    my @time = localtime(time);
    @time = map{ two_digits($_) } @time;
    my ( $sec, $min, $hour, $mday, $mon, $year ) = @time;
    $year += 1900;
    return "$dir/$year$mon$mday-$hour$min$sec.todo";
}

sub two_digits
{
    my $int = shift;
    return "0$int" if $int and $int =~ /^\d$/ and $int < 10;
    return $int;
}

__END__

=pod

=head1 NAME

todo

=head1 DESCRIPTION

priority
    1 - highest
    5 - lowest
