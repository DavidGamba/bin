#!/usr/bin/perl -w
use strict;
use Env qw(HOME);
use Expect;
use Getopt::Long qw(:config passthrough no_ignore_case);
use Pod::Usage;

GetOptions(
  'h|?'  => sub { pod2usage( -verbose => 0 ) },
  'help' => sub { pod2usage( -verbose => 3 ) },
);

my $hostname = shift;
pod2usage("[ERROR] Missing hostname!\n")
unless defined $hostname;

open my $in, '<', "$HOME/.ssh/config" or die "Can't open file: $!\n";
while (<$in>) {
    if (/Host $hostname # (\S*)/) {
        my $password = $1;
        interactive_ssh( $hostname, $password );
    }
}
interactive_ssh( $hostname );

sub interactive_ssh
{
    my $hostname = shift;
    my $password = shift;
    my $timeout  = 15;

    my @cmd = ( 'ssh', '-t', $hostname, 'bash', '-o', 'vi', '-i' );

    # my @cmd = ('ssh', $hostname);
    my $exp = new Expect;
    $exp->slave->clone_winsize_from( \*STDIN );
    $exp->spawn(@cmd);
    my $winch;
    $winch = sub {
        $exp->slave->clone_winsize_from( \*STDIN );
        kill WINCH => $exp->pid if $exp->pid;
        $SIG{WINCH} = \&$winch;
    };
    $SIG{WINCH} = \&$winch;

    if( defined $password ) {
      $exp->expect(
        $timeout,
        [   qr/no\)\?\s+$/i => sub {
            my $self = shift;
            $self->send("yes\n");
            exp_continue;
          }
        ],
        [   qr/password:\s+$/i => sub {
            my $self = shift;
            $self->send("$password\n");
            exp_continue;
          }
        ],
        '-re',
        qr/~/,    #' wait for shell prompt, then exit expect
      );
    }
    else {
      $exp->expect(
        $timeout,
        [   qr/no\)\?\s+$/i => sub {
            my $self = shift;
            $self->send("yes\n");
            exp_continue;
          }
        ],
        '-re',
        qr/password:\s+$/,    #' wait for shell prompt, then exit expect
      );
    }
    $exp->interact();
    $exp->soft_close();
    exit 0;
}

__END__

=head1 NAME

cssh

=head1 DESCRIPTION

Given a hostname it reads the file ~/.ssh/config and checks if a password is
present. If it is, it uses it to ssh into the server. If not, it will ask
for the password.

~/.ssh/config file syntax:

  Syntax:
  Host hostname # password
    Hostname full_hostname
    User username

=head1 SYNOPSIS

  cssh <hostname>
  cssh [--help]       # shows extended help
  cssh [-h |-?]       # shows short help

=head1 DEPENDENCIES

  cpan Expect
  cpan IO::Stty
